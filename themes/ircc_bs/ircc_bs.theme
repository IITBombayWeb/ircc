<?php

/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */
/**
 * Implements hook_preprocess_HOOK() for block templates.
 */
function ircc_bs_preprocess_block(&$variables) {
  global $base_path;
  switch ($variables['base_plugin_id']) {
    case 'system_branding_block':
      $variables['site_logo'] = '';
      if ($variables['content']['site_logo']['#access'] && $variables['content']['site_logo']['#uri']) {
        $variables['site_logo'] = str_replace('.svg', '.png', $variables['content']['site_logo']['#uri']);
      }
      $variables['site_logo_2'] = $base_path . drupal_get_path('theme','ircc_bs') . '/logo2.png';
      break;
  }
}

/**
 * Implements hook_preprocess_menu().
 */
function ircc_bs_preprocess_menu(&$variables, $hook) {
  if ($hook == 'menu__main') { // We're doing that for main menu.
    // Get the current path.
    $current_path = \Drupal::request()->getRequestUri();
    $items = $variables['items'];
    foreach ($items as $key => $item) {
      // If path is current_path, set active to li.
      if ($item['url']->toString() == $current_path) {
      // Add active link.
      $variables['items'][$key]['attributes']['class'] = 'active';
      }
    }
  }
}

/**
 * Implements hook_preprocess_breadcrumb().
 */
function ircc_bs_preprocess_breadcrumb(&$variables){
  if(($node = \Drupal::routeMatch()->getParameter('node')) && $variables['breadcrumb']){
    $variables['breadcrumb'][] = array(
     'text' => $node->getTitle(),
     'url' => $node->URL()
   );
  }
}

function ircc_bs_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  foreach (\Drupal\Core\Render\Element::children($form) as $key) {
    $form[$key]['#attributes']['data-twig-suggestion'] = $form['#id'];
  }

  $form['actions']['submit']['#attributes']['data-twig-suggestion'] = $form['#id'];
}
// function ircc_bs_theme_suggestions_page_alter(array &$suggestions, array $variables) {
//
//   if ($node = \Drupal::routeMatch()->getParameter('node')) {
//     $content_type = $node->bundle();
//     $suggestions[] = 'page__'.$content_type;
//   }
// }

// function template_preprocess_page(&$variables) {
//
//     $variables['some_term'] = \Drupal::service('entity_type.manager')->getStorage("taxonomy_term")->loadTree('some_term', $parent = 0, $max_depth = NULL, $load_entities = FALSE);
//
// }



// function ircc_bs_preprocess_menu__content_updation(&$variables) {

//   ksm($variables);
//   // We require Modernizr's touch test for button styling.
//   //$variables['#attached']['library'][] = 'core/modernizr';
// }
