<?php
use Drupal\Core\Routing\RouteMatchInterface;

use Drupal\migrate_tools\MigrateExecutable;
use Drupal\migrate_tools\MigrateBatchExecutable;
use Drupal\migrate\MigrateMessage;

use Drupal\Core\Session\AccountInterface;

/**
 * @file
 * Contains iitb_jobs.module.
 */

/**
 * Implements hook_help().
 */
function iitb_jobs_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the iitb_jobs module.
    case 'help.page.iitb_jobs':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('IITB Job Listings') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function iitb_jobs_theme() {
  return [
    'iitb_jobs' => [
      'render element' => 'children',
    ],
  ];
}

/**
 * Implements hook_cron().
 */
function iitb_jobs_cron() {

  //This code below is not required as we are running migration using drush command in crontab of aegir. Uncomment it if we don't want to use crontab migration in future.
  /*$manager = \Drupal::service('plugin.manager.migration');
  $migration_ids = ['drona_job_circulars','drona_job_designations','drona_job_shortlisted','drona_job_appointed']; 

  foreach ($migration_ids as $migration_id) {
    $limit=0;
    $update=1;
    $force=0; //Ignore dependencies
    $options = [
      'limit' => $limit,
      'update' => $update,
      'force' => $force,
    ];
    $migrateMessage = new MigrateMessage();
    $migration = $manager->createInstance($migration_id);
    
    // if (\Drupal::currentUser()->isAnonymous()) {
    //   drupal_set_message('is visitor');
    // } else {
    //   drupal_set_message('is logged in');
    // }
    if (php_sapi_name() == 'cli') {   
      if (isset($_SERVER['TERM'])) {   
        //drupal_set_message("The script was run from a manual invocation on a shell");
        $executable = new MigrateExecutable($migration, $migrateMessage, $options);
        $executable->import();
      } else {   
        //drupal_set_message("The script was run from the crontab entry");
        $executable = new MigrateExecutable($migration, $migrateMessage, $options);
        $executable->import();
      }   
    } else { 
      //drupal_set_message("The script was run from a webserver, or something else");
      $executable = new MigrateBatchExecutable($migration, $migrateMessage, $options);
      $executable->batchImport();
    }
  }*/

  //To unpublish duplicated appointed candidates nodes. (Duplicate nodes are being created because empid is being updated later in Drona db and it disturbes the unique field required by the migration. Also as there is no unique field in Drona db for appointed candidates.)
  $query = \Drupal::entityQuery('node')->condition('type', 'job_appointed');
  $query->condition('field_appointed_emp_code', '', '!=');
  $result = $query->execute();
  if($result) {
    foreach ($result as $key => $value) {
      $node = \Drupal\node\Entity\Node::load($value);
      $empty_emp_code_title = explode(":",$node->getTitle());
      $empty_emp_code_title_new = $empty_emp_code_title[0].':'.$empty_emp_code_title[1].':'.$empty_emp_code_title[2].':'.$empty_emp_code_title[3].'::'.$empty_emp_code_title[5];
      $query2 = \Drupal::entityQuery('node')->condition('type', 'job_appointed');
      $query2->condition('title', $empty_emp_code_title_new, '=');
      $query2->notExists('field_appointed_emp_code');
      $result2 = $query2->execute();
      if ($result2) {
        foreach ($result2 as $key2 => $value2) {
          $node2 = \Drupal\node\Entity\Node::load($value2);
          $node2->status = NODE_NOT_PUBLISHED;
          //$node2->save();
        }
      }
    }
  }
  
}
